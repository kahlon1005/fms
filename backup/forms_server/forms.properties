# $Id: forms.properties 18-feb-2004.16:11:34 ahousing Exp $
# Name:
#   forms.properties
# Purpose
#   Forms servlet zone configuration file for JServ
# Note:
#   We recommend using OC4J rather than JServ to run Forms applications.
# Usage:
# (some of these steps may be done automatically by the AS installation 
#  process)
#   1. Configure a JServ zone called "forms" by editing the jserv.properties
#      file as follows:
#      - Append ",forms" to the "zones=" line, giving a line like:
#          zones=root,forms
#      - Add a new line like the following, pointing to this file 
#        (putting in the appropriate path for <ORACLE_HOME>):
#          forms.properties=<ORACLE_HOME>/forms/server/forms.properties
#   2. Include the forms.conf file (directly or indirectly) in the Apache 
#      httpd.conf file, for example, add the following line to the jserv.conf 
#      file:
#        include "<ORACLE_HOME>/forms/server/forms.conf"
#   3. Edit this file to replace the text <percent>ORACLE_HOME<percent> 
#      (in the lines starting "repositories=" and 
        "servlet.frmservlet.initArgs=")
#      with the correct ORACLE_HOME path value for your AS installation

# List of Repositories
#######################

# The list of servlet repositories controlled by this servlet zone
# Syntax: repositories=[repository],[repository]...
# Default: NONE
# Note: The classes you want to be reloaded upon modification should be put
#       here.

repositories=D:\DevSuiteHome_1/j2ee/OC4J_BI_Forms/applications/formsapp/formsweb/WEB-INF/lib/frmsrv.jar

# Classloader parameters
#########################

# Enable servlet class autoreloading.
# Syntax: autoreload.classes=[true,false] (boolean)
# Default: true
autoreload.classes=false

# Enable servlet resourced autoreloading (properties and other loaded resources)
# Syntax: autoreload.file=[true,false] (boolean)
# Default: true
autoreload.file=false

# Set the number of millisecond to wait before giving up on initializing a servlet.
# (a timeout of zero means no timeout)
# Syntax: init.timeout=(long)>0
# Default: 10000 (10 secs)
init.timeout=10000

# Set the number of millisecond to wait before giving up on destroying a servlet.
# (a timeout of zero means no timeout)
# Syntax: destroy.timeout=(long)>0
# Default: 10000 (10 secs)
destroy.timeout=10000

# Set whether or not to use cookies to maintain session state.
# If false, then response.encodeUrl() will always be the method
# to maintain session state. If true, then the servlet engine will
# attempt to set a cookie when request.getSession(true) is called.
# Syntax: session.useCookies=[true,false] (boolean)
# Default: true
session.useCookies=false

# Set the number of millisecond to wait before invalidating an unused session.
# Syntax: session.timeout=(long)>0
# Default: 1800000 (30 mins)
# 1 min: session.timeout=60000

# Set how frequently (milliseconds) to check for timed-out sessions.
# Syntax: session.checkFrequency=(long)>0
# Default: 30000 (30 secs)
session.checkFrequency=30000

# SingleThreadModel Servlets parameters
########################################

# Set the initial capacity of the STM servlets pool.
# Syntax: singleThreadModelServlet.initialCapacity=(int)>1
# Default: 5
singleThreadModelServlet.initialCapacity=5

# Set the number of servlet instances should be added to the pool if found empty.
# Syntax: singleThreadModelServlet.incrementCapacity=(int)>1
# Default: 5
singleThreadModelServlet.incrementCapacity=5

# Set the maximum capacity of the STM pool
# Syntax: singleThreadModelServlet.maximumCapacity=(int)>1
# Default: 10
singleThreadModelServlet.maximumCapacity=10

################### S E R V L E T    P A R A M E T E R S ######################

################################## N O T E ####################################
# When "classname" is specified, it means a Java dot-formatter full class name
# without the ".class". For example, a class with source file named 
# "Dummy.java" with a package name "org.fool" is defined as "org.fool.Dummy".
#
# Since each servlet may have lots of private initialization data, Apache JServ
# allows you to store those servlet initArgs in a separate file. To do this,
# simply do not set any initArgs in this file: Apache JServ will then look for
# a file named "[servlet classname].initargs" in the same directory of that 
# class. Note that this may work with even class archives.
###############################################################################

# Startup Servlets
###################

# Comma or space delimited list of servlets to launch on startup.
# This can either be a class name or alias.
# Syntax: servlets.startup=[classname or alias],[classname or alias],...
# Default: NONE
# servlets.startup=hello,snoop,org.fool.Dummy

# Servlet Aliases
##################

# This defines aliases from which servlets can be invoked.
# Each alias give a new instance of the servlet. This means that if a servlet 
# is invoked both by class name and by alias name, it will result in _TWO_ 
# instances of the servlet being created.
# Syntax: servlet.[alias].code=[classname] (String)
# Default: NONE
# servlet.snoop.code=SnoopServlet
# servlet.hello.code=org.fool.Dummy

# Global Init Parameters
#########################

# Parameters passed here are given to each of servlets. You should put 
# configuration information that is common to all servlets.
#
# The value of the property is a comma delimited list of "name=value" pairs 
# that are accessible to the servlet via the method getInitParameter() 
# in ServletConfig.
# Syntax: servlets.default.initArgs=[name]=[value],[name]=[value],...
# Default: NONE
# servlets.default.initArgs=common.to.everybody=Hi everybody!

# Servlet Init Parameters
##########################

# These properties define init parameters for each servlet that is invoked 
# by its classname.
# Syntax: servlet.[classname].initArgs=[name]=[value],[name]=[value],...
# Default: NONE
# servlet.org.fool.Dummy.initArgs=message=I'm a dummy servlet

# Aliased Servlet Init Parameters
##################################

# These properties define init parameters for each servlet that is invoked 
# by its alias.
# Syntax: servlet.[alias].initArgs=[name]=[value],[name]=[value],...
# Default: NONE
# servlet.snoop.initArgs=message=I'm a snoop servlet
# servlet.hello.initArgs=message=I say hello world to everyone

# Forms Servlets
# ---------------------------
servlet.frmservlet.code=oracle.forms.servlet.FormsServlet
servlet.lservlet.code=oracle.forms.servlet.ListenerServlet

servlet.frmservlet.initArgs=configFileName=D:\DevSuiteHome_1/forms/server/formsweb.cfg,testmode=false
